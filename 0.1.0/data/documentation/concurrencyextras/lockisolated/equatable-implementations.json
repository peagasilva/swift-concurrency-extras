{"variants":[{"paths":["\/documentation\/concurrencyextras\/lockisolated\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/Equatable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/!=(_:_:)","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/==(_:_:)"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"ConcurrencyExtras"}],"role":"collectionGroup","title":"Equatable Implementations"},"hierarchy":{"paths":[["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated"]]},"references":{"doc://ConcurrencyExtras/documentation/ConcurrencyExtras":{"role":"collection","title":"ConcurrencyExtras","abstract":[{"type":"text","text":"Useful, testable Swift concurrency."}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated/!=(_:_:)":{"role":"symbol","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/!=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/lockisolated\/!=(_:_:)"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated":{"role":"symbol","title":"LockIsolated","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockIsolated"}],"abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value with a lock."}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}],"url":"\/documentation\/concurrencyextras\/lockisolated"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated/==(_:_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"LockIsolated","preciseIdentifier":"s:17ConcurrencyExtras12LockIsolatedC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"LockIsolated","preciseIdentifier":"s:17ConcurrencyExtras12LockIsolatedC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated\/==(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/lockisolated\/==(_:_:)"}}}