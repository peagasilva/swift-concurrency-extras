{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UncheckedSendable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes we need to use types that should be sendable but have not yet been audited for"},{"type":"text","text":" "},{"type":"text","text":"sendability. If we feel confident that the type is truly sendable, and we donâ€™t want to blanket"},{"type":"text","text":" "},{"type":"text","text":"disable concurrency warnings for a module via "},{"type":"codeVoice","code":"@preconcurrency import"},{"type":"text","text":", then we can selectively"},{"type":"text","text":" "},{"type":"text","text":"make that single type sendable by wrapping it in "},{"type":"codeVoice","code":"UncheckedSendable"},{"type":"text","text":"."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By wrapping something in "},{"type":"codeVoice","code":"UncheckedSendable"},{"type":"text","text":" you are asking the compiler to trust you"},{"type":"text","text":" "},{"type":"text","text":"that the type is safe to use from multiple threads, and the compiler cannot help you find"},{"type":"text","text":" "},{"type":"text","text":"potential race conditions in your code."}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To synchronously isolate a value with a lock, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated"},{"type":"text","text":". To asynchronously isolated a"},{"type":"text","text":" "},{"type":"text","text":"value on an actor, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/ActorIsolated"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/concurrencyextras\/uncheckedsendable"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/ConcurrencyExtras\/Se","doc:\/\/ConcurrencyExtras\/SE","doc:\/\/ConcurrencyExtras\/SQ","doc:\/\/ConcurrencyExtras\/SH","doc:\/\/ConcurrencyExtras\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" type into a "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" one, in an unchecked"},{"type":"text","text":" "},{"type":"text","text":"manner."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UncheckedSendable"}],"title":"UncheckedSendable","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:17ConcurrencyExtras17UncheckedSendableV","modules":[{"name":"ConcurrencyExtras"}],"navigatorTitle":[{"kind":"identifier","text":"UncheckedSendable"}]},"hierarchy":{"paths":[["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/init(_:)","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/projectedValue","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/value","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/wrappedValue"]},{"title":"Subscripts","identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/subscript(dynamicMember:)-1qazw","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/subscript(dynamicMember:)-6qlle"]},{"title":"Default Implementations","identifiers":["doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/Decodable-Implementations","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/Encodable-Implementations","doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/Equatable-Implementations"],"generated":true}],"references":{"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/projectedValue":{"role":"symbol","title":"projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UncheckedSendable","preciseIdentifier":"s:17ConcurrencyExtras17UncheckedSendableV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/projectedValue","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/projectedvalue"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes unchecked sendability around a value."}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/init(_:)"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/equatable-implementations"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras":{"role":"collection","title":"ConcurrencyExtras","abstract":[{"type":"text","text":"Useful, testable Swift concurrency."}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras"},"doc://ConcurrencyExtras/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ConcurrencyExtras\/SQ"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/value":{"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"The unchecked value."}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/value","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/value"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/Decodable-Implementations":{"role":"collectionGroup","title":"Decodable Implementations","abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/Decodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/decodable-implementations"},"doc://ConcurrencyExtras/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ConcurrencyExtras\/SE"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/ActorIsolated":{"role":"symbol","title":"ActorIsolated","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIsolated"}],"abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value to an actor."}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/ActorIsolated","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorIsolated"}],"url":"\/documentation\/concurrencyextras\/actorisolated"},"doc://ConcurrencyExtras/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ConcurrencyExtras\/Se"},"doc://ConcurrencyExtras/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ConcurrencyExtras\/SH"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/LockIsolated":{"role":"symbol","title":"LockIsolated","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockIsolated"}],"abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value with a lock."}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/LockIsolated","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}],"url":"\/documentation\/concurrencyextras\/lockisolated"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/subscript(dynamicMember:)-6qlle":{"role":"symbol","title":"subscript(dynamicMember:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Subject"}],"abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/subscript(dynamicMember:)-6qlle","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/subscript(dynamicmember:)-6qlle"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable":{"role":"symbol","title":"UncheckedSendable","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UncheckedSendable"}],"abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" type into a "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" one, in an unchecked"},{"type":"text","text":" "},{"type":"text","text":"manner."}],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UncheckedSendable"}],"url":"\/documentation\/concurrencyextras\/uncheckedsendable"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/wrappedvalue"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/subscript(dynamicMember:)-1qazw":{"role":"symbol","title":"subscript(dynamicMember:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Subject"}],"abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/subscript(dynamicMember:)-1qazw","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/subscript(dynamicmember:)-1qazw"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/init(wrappedValue:)":{"role":"symbol","title":"init(wrappedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/init(wrappedValue:)","kind":"symbol","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/init(wrappedvalue:)"},"doc://ConcurrencyExtras/documentation/ConcurrencyExtras/UncheckedSendable/Encodable-Implementations":{"role":"collectionGroup","title":"Encodable Implementations","abstract":[],"identifier":"doc:\/\/ConcurrencyExtras\/documentation\/ConcurrencyExtras\/UncheckedSendable\/Encodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/concurrencyextras\/uncheckedsendable\/encodable-implementations"},"doc://ConcurrencyExtras/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ConcurrencyExtras\/s8SendableP"}}}